/*
 * Created brightSPARK Labs
 * www.brightsparklabs.com
 */

// -----------------------------------------------------------------------------
// PLUGINS
// -----------------------------------------------------------------------------

plugins {
    // Apply the brightSPARK Labs plugin for standardisation
    id 'com.brightsparklabs.gradle.baseline' version "0.1.1"

    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    // Apply bintray plugin for publishing artifacts
    id "com.jfrog.bintray" version "1.8.4"
    id "maven-publish"
}

// -----------------------------------------------------------------------------
// IMPORTS
// -----------------------------------------------------------------------------

apply from: 'startScripts.gradle'

// -----------------------------------------------------------------------------
// REPOSITORIES/DEPENDENCIES
// -----------------------------------------------------------------------------

repositories {
    jcenter()
}

dependencies {
    implementation 'com.brightsparklabs:assam:0.7.1'
    implementation "com.google.guava:guava:27.1-jre"
    implementation "org.bouncycastle:bcprov-jdk15on:1.61"
    def slf4jVersion = "1.7.26"
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "joda-time:joda-time:2.10.2"

    implementation "commons-cli:commons-cli:1.4"

    testImplementation 'junit:junit:4.12'

    def powermockVersion = "1.6.6"
    testImplementation "org.powermock:powermock-api-mockito:${powermockVersion}"
    testImplementation "org.powermock:powermock-module-junit4:${powermockVersion}"
    testImplementation 'org.hamcrest:hamcrest-all:1.3'

    testImplementation "org.codehaus.groovy:groovy-all:2.5.7"
    testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"

    testRuntimeOnly "cglib:cglib-nodep:3.2.12"

    runtimeOnly "org.slf4j:slf4j-log4j12:${slf4jVersion}"
}

// -----------------------------------------------------------------------------
// PROJECT IDENTIFICATION
// -----------------------------------------------------------------------------

project.description = 'A dynamic ASN.1 Parser'
project.ext.url = 'https://github.com/brightsparklabs/asanti'
project.ext.scm = 'scm:git@github.com:brightsparklabs/asanti.git'

// -----------------------------------------------------------------------------
// CREATE START SCRIPTS (via application)
// -----------------------------------------------------------------------------

mainClassName = 'com.brightsparklabs.asanti.AsantiCli'

// -----------------------------------------------------------------------------
// PUBLISHING TO MAVEN CENTRAL (via maven-publish)
// -----------------------------------------------------------------------------

// Include javadoc and sources (requirements for publishing to Maven Central)
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

def pomConfig = {
    name project.name
    packaging 'jar'
    description project.description
    url project.url

    scm {
        connection project.scm
        developerConnection project.scm
        url project.scm
    }

    licenses {
        license {
            name 'MIT License'
            url 'http://www.opensource.org/licenses/mit-license.php'
        }
    }

    developers {
        developer {
            id 'brightsparklabs'
            name 'brightSPARK Labs'
            email 'enquire@brightsparklabs.com'
        }
    }
}

publishing {
    publications {
        Publication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId project.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.children().last() + pomConfig
            }
        }
    }
}
