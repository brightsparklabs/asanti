<?xml version="1.0" encoding="UTF-8"?>
<project name="module_asanti" default="compile.module.asanti">
  <dirname property="module.asanti.basedir" file="${ant.file.module_asanti}"/>
  
  <property name="module.jdk.home.asanti" value="${jdk.home.1.7}"/>
  <property name="module.jdk.bin.asanti" value="${jdk.bin.1.7}"/>
  <property name="module.jdk.classpath.asanti" value="jdk.classpath.1.7"/>
  
  <property name="compiler.args.asanti" value="-encoding windows-1252 -source 1.7 ${compiler.args}"/>
  
  <property name="asanti.output.dir" value="${module.asanti.basedir}/build/classes/main"/>
  <property name="asanti.testoutput.dir" value="${module.asanti.basedir}/build/classes/test"/>
  
  <path id="asanti.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="asanti.module.production.classpath">
    <path refid="${module.jdk.classpath.asanti}"/>
    <path refid="library.gradle:_com.google.guava:guava:18.0.classpath"/>
    <path refid="library.gradle:_org.bouncycastle:bcprov-jdk16:1.45.classpath"/>
    <path refid="library.gradle:_org.slf4j:slf4j-api:1.7.10.classpath"/>
  </path>
  
  <path id="asanti.runtime.production.module.classpath">
    <pathelement location="${asanti.output.dir}"/>
    <path refid="library.gradle:_com.google.guava:guava:18.0.classpath"/>
    <path refid="library.gradle:_org.bouncycastle:bcprov-jdk16:1.45.classpath"/>
    <path refid="library.gradle:_org.slf4j:slf4j-api:1.7.10.classpath"/>
    <path refid="library.gradle:_org.slf4j:slf4j-log4j12:1.7.10.classpath"/>
    <path refid="library.gradle:_log4j:log4j:1.2.17.classpath"/>
  </path>
  
  <path id="asanti.module.classpath">
    <path refid="${module.jdk.classpath.asanti}"/>
    <pathelement location="${asanti.output.dir}"/>
    <path refid="library.gradle:_com.google.guava:guava:18.0.classpath"/>
    <path refid="library.gradle:_org.bouncycastle:bcprov-jdk16:1.45.classpath"/>
    <path refid="library.gradle:_org.slf4j:slf4j-api:1.7.10.classpath"/>
    <path refid="library.gradle:_junit:junit:4.12.classpath"/>
    <path refid="library.gradle:_org.powermock:powermock-api-mockito:1.6.1.classpath"/>
    <path refid="library.gradle:_org.powermock:powermock-module-junit4:1.6.1.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-all:1.3.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath"/>
    <path refid="library.gradle:_org.mockito:mockito-all:1.10.8.classpath"/>
    <path refid="library.gradle:_org.powermock:powermock-api-support:1.6.1.classpath"/>
    <path refid="library.gradle:_org.powermock:powermock-module-junit4-common:1.6.1.classpath"/>
    <path refid="library.gradle:_org.powermock:powermock-core:1.6.1.classpath"/>
    <path refid="library.gradle:_org.powermock:powermock-reflect:1.6.1.classpath"/>
    <path refid="library.gradle:_org.javassist:javassist:3.18.2-ga.classpath"/>
    <path refid="library.gradle:_org.objenesis:objenesis:2.1.classpath"/>
  </path>
  
  <path id="asanti.runtime.module.classpath">
    <pathelement location="${asanti.testoutput.dir}"/>
    <pathelement location="${asanti.output.dir}"/>
    <path refid="library.gradle:_com.google.guava:guava:18.0.classpath"/>
    <path refid="library.gradle:_org.bouncycastle:bcprov-jdk16:1.45.classpath"/>
    <path refid="library.gradle:_org.slf4j:slf4j-api:1.7.10.classpath"/>
    <path refid="library.gradle:_org.slf4j:slf4j-log4j12:1.7.10.classpath"/>
    <path refid="library.gradle:_log4j:log4j:1.2.17.classpath"/>
    <path refid="library.gradle:_junit:junit:4.12.classpath"/>
    <path refid="library.gradle:_org.powermock:powermock-api-mockito:1.6.1.classpath"/>
    <path refid="library.gradle:_org.powermock:powermock-module-junit4:1.6.1.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-all:1.3.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath"/>
    <path refid="library.gradle:_org.mockito:mockito-all:1.10.8.classpath"/>
    <path refid="library.gradle:_org.powermock:powermock-api-support:1.6.1.classpath"/>
    <path refid="library.gradle:_org.powermock:powermock-module-junit4-common:1.6.1.classpath"/>
    <path refid="library.gradle:_org.powermock:powermock-core:1.6.1.classpath"/>
    <path refid="library.gradle:_org.powermock:powermock-reflect:1.6.1.classpath"/>
    <path refid="library.gradle:_org.javassist:javassist:3.18.2-ga.classpath"/>
    <path refid="library.gradle:_org.objenesis:objenesis:2.1.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.asanti">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.asanti">
    <patternset refid="excluded.from.module.asanti"/>
  </patternset>
  
  <path id="asanti.module.sourcepath">
    <dirset dir="${module.asanti.basedir}">
      <include name="src/main/java"/>
      <include name="src/main/resources"/>
    </dirset>
  </path>
  
  <path id="asanti.module.test.sourcepath">
    <dirset dir="${module.asanti.basedir}">
      <include name="src/test/java"/>
      <include name="src/test/resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.asanti" depends="compile.module.asanti.production,compile.module.asanti.tests" description="Compile module asanti"/>
  
  <target name="compile.module.asanti.production" depends="register.custom.compilers" description="Compile module asanti; production classes">
    <mkdir dir="${asanti.output.dir}"/>
    <javac2 destdir="${asanti.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.asanti}/javac">
      <compilerarg line="${compiler.args.asanti}"/>
      <bootclasspath refid="asanti.module.bootclasspath"/>
      <classpath refid="asanti.module.production.classpath"/>
      <src refid="asanti.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.asanti"/>
    </javac2>
    
    <copy todir="${asanti.output.dir}">
      <fileset dir="${module.asanti.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.asanti.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.asanti.tests" depends="register.custom.compilers,compile.module.asanti.production" description="compile module asanti; test classes" unless="skip.tests">
    <mkdir dir="${asanti.testoutput.dir}"/>
    <javac2 destdir="${asanti.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.asanti}/javac">
      <compilerarg line="${compiler.args.asanti}"/>
      <bootclasspath refid="asanti.module.bootclasspath"/>
      <classpath refid="asanti.module.classpath"/>
      <src refid="asanti.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.asanti"/>
    </javac2>
    
    <copy todir="${asanti.testoutput.dir}">
      <fileset dir="${module.asanti.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.asanti.basedir}/src/test/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.asanti" description="cleanup module">
    <delete dir="${asanti.output.dir}"/>
    <delete dir="${asanti.testoutput.dir}"/>
  </target>
</project>